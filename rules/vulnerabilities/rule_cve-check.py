import requests

from core.redis   import rds
from core.triage  import Triage
from core.parser  import ScanParser, ConfParser

class Rule:
  def __init__(self):
    self.rule = 'VLN_2451'
    self.rule_severity = 3
    self.rule_description = 'This rule checks for known Software Vulnerabilities'
    self.rule_confirm = 'Critical Vulnerabilities Found'
    self.rule_details = ''
    self.rule_mitigation = '''Server has 1 or more Critical (10.0) CVEs associated with its version.
Update the software to the latest version'''
    self.intensity = 0

  def check_rule(self, ip, port, values, conf):
    c = ConfParser(conf)
    t = Triage()
    p = ScanParser(port, values)
    
    domain = p.get_domain()
    module = p.get_module()
    cpe = p.get_cpe()
    
    if not cpe:
      return
    
    if not c.get_cfg_allow_inet():
      return
    
    if 'http' not in module:
      return 
    
    if t.has_cves(cpe):
      self.rule_details = 'List of Vulnerabilities for this version: https://nvd.nist.gov/vuln/search/results?cpe_version={}'.format(cpe)  
      rds.store_vuln({
        'ip':ip,
        'port':port,
        'domain':domain,
        'rule_id':self.rule,
        'rule_sev':self.rule_severity,
        'rule_desc':self.rule_description,
        'rule_confirm':self.rule_confirm,
        'rule_details':self.rule_details,
        'rule_mitigation':self.rule_mitigation
      })
      
    return
